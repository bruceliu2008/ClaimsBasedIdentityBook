<?xml version="1.0" encoding="utf-8" ?>
<!--
   Copyright (c) Microsoft Corporation.  All rights reserved.
-->
<configuration>
  <configSections>
    <!-- Registers the microsoft.IdentityModel configuration section -->
    <section name="microsoft.identityModel" type="Microsoft.IdentityModel.Configuration.MicrosoftIdentityModelSection, Microsoft.IdentityModel, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
  </configSections>

  <appSettings>
    <add key="bookDB" value="BookDB.txt" />
    <add key="certDistinguishedName" value="CN=WifBookStoreSTS.com" />
    <add key="targetDistinguishedName" value="CN=WifBookStoreService.com" />
    <add key="issuerDistinguishedName" value="CN=WifHomeRealmSTS.com" />
    <add key="issuerAddress" value="http://localhost/FederationSample/BookStoreSTS/STS.svc" />
    <add key="expectedAppliestoURI" value="http://localhost/FederationSample/BookStoreService/store.svc/buy"/>
  </appSettings>

  <system.web>
    <compilation debug="true" targetFramework="4.0" />
  </system.web>

  <system.serviceModel>
    <diagnostics>
      <messageLogging maxMessagesToLog="30000" logEntireMessage="true" logMessagesAtServiceLevel="true" logMalformedMessages="true" logMessagesAtTransportLevel="true"></messageLogging>
    </diagnostics>
    <behaviors>
      <serviceBehaviors>
        <behavior name="BookStoreSTSBehavior">
          <serviceCredentials>
            <!-- 
            The serviceCredentials behavior allows one to define a service certificate.
            A service certificate is used by a client to authenticate the STS and provide message protection.
            This configuration references the "BookStoreSTS.com" certificate installed during setup of the sample.
            -->
            <serviceCertificate storeLocation="LocalMachine"
                                storeName="My"
                                x509FindType="FindBySubjectName"
                                findValue="WifBookStoreSTS.com" />
            <!-- 
            The serviceCredentials behavior allows one to define validation parameters for issued tokens.
            This configuration adds the "HomeRealmSTS.com" certificate to a list of known certificates. This
            means that the STS will accept tokens issued by "HomeRealmSTS.com".
            -->
            <issuedTokenAuthentication>
              <knownCertificates>
                <add  storeLocation ='LocalMachine'
                      storeName ='TrustedPeople'
                      x509FindType ='FindBySubjectName'
                      findValue ='WifHomeRealmSTS.com' />
              </knownCertificates>
            </issuedTokenAuthentication>
          </serviceCredentials>
          <!-- 
          The serviceMetadata behavior allows one to enable metadata (e.g. WSDL, Policy) publishing.
          This configuration enables publishing of such data over HTTP GET.
          -->
          <serviceMetadata httpGetEnabled ="true" />
        </behavior>
      </serviceBehaviors>
    </behaviors>

    <bindings>
      <ws2007FederationHttpBinding>
        <!-- This is the binding for the clients requesting tokens from this STS. It redirects clients to the HomeRealm STS -->
        <binding name='BookStoreSTSBinding'>
          <security mode='Message'>
            <message>
              <issuerMetadata address='https://localhost/FederationSample/HomeRealmSTS/STS.svc/mex' >
                <!--
                The HomeRealm STS will, in all likelyhood, be running on a machine whose domain name
                is NOT HomeRealmSTS.com, but will identify itself using a certificate containing 
                "HomeRealmSTS.com" as its subject name. The identity configuration element here tells
                consumers of the service to expect a DNS name of "HomeRealmSTS.com" when talking to 
                the HomeRealm STS.
                -->
                <identity>
                  <dns value ='HomeRealmSTS.com' />
                </identity>
              </issuerMetadata>
            </message>
          </security>
        </binding>
      </ws2007FederationHttpBinding>
    </bindings>

    <services>
      <service name="Microsoft.IdentityModel.Protocols.WSTrust.WSTrustServiceContract"
                         behaviorConfiguration="BookStoreSTSBehavior">
        <!-- 
        This is the HTTP endpoint that supports clients requesing tokens. This endpoint requires that clients
        authenticate using a token issued by the "HomeRealmSTS.com" STS.        
        -->
        <endpoint address=""
                              binding="ws2007FederationHttpBinding"
                              bindingConfiguration='BookStoreSTSBinding' contract='Microsoft.IdentityModel.Protocols.WSTrust.IWSTrust13SyncContract'
                              />
        <!-- 
        This is the HTTPS endpoint that supports IMetadataExchange.
        -->
        <endpoint address="mex"
                  binding="mexHttpsBinding"
                  contract="IMetadataExchange" />
      </service>
    </services>
  </system.serviceModel>

  <!-- 
  Comment the lines below to disable WIF tracing to: BookStoreSTS.e2e and WCF tracing to: WCFTrace.e2e
  Open the trace file using the SvcTraceViewer.exe tool (shipped with the WCF SDK available from Microsoft) or a xml viewer.
  -->

  <system.diagnostics>

    <sources>

      <source name="System.ServiceModel" switchValue="Verbose, ActivityTracing">
        <listeners>
          <add name="xml" />
        </listeners>
      </source>

      <source name="System.ServiceModel.MessageLogging"  switchValue="Verbose">
        <listeners>
          <add name="xml" />
        </listeners>
      </source>

      <source name="Microsoft.IdentityModel" switchValue="Verbose">
        <listeners>
          <add name="xml" type="System.Diagnostics.XmlWriterTraceListener" initializeData="BookStoreSTS.e2e" />
        </listeners>
      </source>
      
     </sources>
    
     <sharedListeners>
       <add name="xml" type="System.Diagnostics.XmlWriterTraceListener" initializeData="WCFTrace.e2e" />
     </sharedListeners>

     <trace autoflush="true" />
   </system.diagnostics>

  <microsoft.identityModel>
    <service>
      <audienceUris>
        <add value="http://localhost/FederationSample/BookStoreSTS/STS.svc"/>
      </audienceUris>
      <issuerNameRegistry type="TrustedIssuerNameRegistry" />
    </service>
  </microsoft.identityModel>

</configuration>
